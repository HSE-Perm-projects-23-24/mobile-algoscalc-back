name: "CI CD actions"
on:
  push:
    branches:
      - Test
  pull_request:
    branches:
      - Test
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write

env:
  REGISTRY: ghcr.io
  CONTAINER_NAME: ${{ github.event.repository.name }}-dev
  VOLUME_NAME: ${{ github.event.repository.name }}-dev-volume

jobs:
  test:
    name: Unit testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - name: Test with unittest module
      run: python -m unittest discover -v -s ./src
  lint:
    name: Code style check
    runs-on: ubuntu-latest
    needs: test
    if: needs.test.result == 'success' && github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - uses: TrueBrain/actions-flake8@v2
        with:
          only_warn: 1
          max_line_length: 80
          extra_arguments: "--max-complexity=10"
  build:
    runs-on: ubuntu-latest
    needs: test
    if: needs.test.result == 'success' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - name: lowercase github.repository
        run: |
          echo "IMAGE_NAME=`echo ${{github.repository}} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev
  deploy-test:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success' && github.event_name == 'push'
    steps:
      - name: lowercase github.repository
        run: |
          echo "IMAGE_NAME=`echo ${{github.repository}} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}
      - name: deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EDU_PRACTICE_HOST }}
          username: ${{ secrets.EDU_PRACTICE_USERNAME }}
          key: ${{ secrets.EDU_PRACTICE_SSH_KEY }}
          port: ${{ secrets.EDU_PRACTICE_SSH_PORT }}
          script: |
            echo '${{ secrets.EDU_PRACTICE_PACKAGE_TOKEN }}' | docker login ${{ env.REGISTRY }} \
              -u ${{ secrets.EDU_PRACTICE_PACKAGE_USER }} --password-stdin;
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev;
            docker rm -f ${{ env.CONTAINER_NAME }} || true;
            docker run -d \
              -p ${{ secrets.MOB_ALGOS_CALC_BACK_PORT }}:8080 \
              -v ${{ env.VOLUME_NAME }}:/code/logs \
              --restart=always \
              --name ${{ env.CONTAINER_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev;
            docker logout;
